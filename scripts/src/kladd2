
hindcast = xr.open_dataset(config['VALID_DB']+path_e+long_name+\
                                '_hindcast.nc')[var]
                                
stacked_era = xr.open_dataset(config['VALID_DB']+path_e+\
                                            long_name + '_era.nc')[var]                                

hindcast = xh.assign_validation_time(hindcast)
stacked_era = xh.assign_validation_time(stacked_era)

dim='validation_time.month'

lt = steps[0]

mod = hindcast.sel(step=pd.Timedelta(lt,'D'))
obs = stacked_era.sel(step=pd.Timedelta(lt,'D'))
  
x_group = list(mod.groupby(dim))
y_group = list(obs.groupby(dim))
ylabel,ydata   = y_group[0]
xlabel,xdata = x_group[0]

xdata  = xdata.unstack().sortby(['time']) #mod
ydata  = ydata.unstack().sortby(['time']) # obs  


  
score_mean   = xs.mae(xdata.mean('member',skipna=True),ydata,dim=[])
 
 
 
fg,axes = plt.subplots(subplot_kw=dict(projection=ccrs.PlateCarree()))
cmap   = mpl.colors.ListedColormap(
                    ['red','red','red','white','lightblue','royalblue','blue']
                                        )
levels = [-1,-0.5,-0.25,-0.05,0.05,0.25,0.5,1]
norm   = BoundaryNorm(levels,cmap.N)

    
im = skill_score.transpose('lat','lon','time_month').plot(
        x='lon',
        y='lat',
        col='time_month',
        col_wrap=3,
        subplot_kws=dict(projection=ccrs.PlateCarree()
       )

for i,ax in enumerate(im.axes.flat):
    ax.coastlines(resolution='10m', color='black',\
                     linewidth=0.2)
    ax.set_title("Month %d" % i)                      
 
   

                     
for i, ax in enumerate(g.axes.flat):
    ax.set_title("Air Temperature %d" % i)                               
    
ax.set_title(month(xlabel))
ax = fg.add_gridspec(3, 3)
cb = fg.colorbar(im, ax=[axes[-1, :]], location='bottom',boundaries=levels,extend='both') 


fg.suptitle('SS of MAE at lead time: '+str(lt))    
fg.savefig('test_SS_day_' + str(lt.days) + '.png')


 # Bruk denne for Ã¥ plotte lead time med skill    
#    im = skill_score.transpose('lat','lon','time_month').plot(
#     ...:         x='lon',
#     ...:         y='lat',
#     ...:         col='time_month',
#     ...:         col_wrap=3,
#     ...:         subplot_kws=dict(projection=ccrs.PlateCarree()),
#     ...:         transform=ccrs.PlateCarree(),
#     ...:         cmap=cmap,
#     ...:         norm=norm
#     ...:        )
    #fg,axes = plt.axes(subplot_kws=dict(projection=ccrs.PlateCarree()))
#levels = [0, 7, 14, 21, 28, 25, 42]


levels = [-1,-0.5,-0.25,-0.05,0.05,0.25,0.5,1]
        im = skill_score.transpose('lat','lon','time_month').plot(
            x='lon',
            y='lat',
            col='time_month',
            col_wrap=3,
            levels=levels,
            subplot_kws=dict(projection=ccrs.PlateCarree()),
            transform=ccrs.PlateCarree(),
            cbar_kwargs={'label':'SS',
                         'ticks': levels}
        )
    
    
        for i,ax in enumerate(im.axes.flat):
            ax.coastlines(resolution='10m', color='black',\
                          linewidth=0.2)
            ax.set_title(month(i))
    

   

  
     
        plt.suptitle('SS of MAE at lead time: '+str(lt))
   
        plt.savefig('test_SS_day_' + str(lt.days) + '.png')
